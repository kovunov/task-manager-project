generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tasks {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(255)
  description String?
  status      String?       @default("pending") @db.VarChar(50)
  priority    String?       @default("medium") @db.VarChar(20)
  due_date    DateTime?     @db.Timestamp(6)
  created_by  Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  updated_at  DateTime?     @default(now()) @db.Timestamp(6)
  users       users?        @relation(fields: [created_by], references: [id], onUpdate: NoAction)
  tasks_users tasks_users[]

  @@index([due_date], map: "idx_tasks_due_date")
  @@index([priority], map: "idx_tasks_priority")
  @@index([status], map: "idx_tasks_status")
}

model tasks_users {
  id          Int       @id @default(autoincrement())
  task_id     Int
  user_id     Int
  role        String    @default("assignee") @db.VarChar(50)
  assigned_at DateTime? @default(now()) @db.Timestamp(6)
  tasks       tasks     @relation(fields: [task_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([task_id, user_id, role])
  @@index([task_id], map: "idx_tasks_users_task_id")
  @@index([user_id], map: "idx_tasks_users_user_id")
}

model users {
  id            Int           @id @default(autoincrement())
  username      String        @unique @db.VarChar(50)
  email         String        @unique @db.VarChar(100)
  password_hash String        @db.VarChar(255)
  first_name    String?       @db.VarChar(100)
  last_name     String?       @db.VarChar(100)
  created_at    DateTime?     @default(now()) @db.Timestamp(6)
  updated_at    DateTime?     @default(now()) @db.Timestamp(6)
  tasks         tasks[]
  tasks_users   tasks_users[]
}
